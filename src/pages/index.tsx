import Head from "next/head";
import PetsList from "src/components/pets/PetsList";
import { MongoClient } from "mongodb";
import PetsSearch from "@/components/pets/PetsSearch";
import { useRouter } from "next/router";
import { PetTypes } from "@/components/pets/NewPetsForm";
import { GetStaticProps, NextPage } from "next";

export interface HomePageProps {
  pets: PetTypes[];
}

const Home: NextPage<HomePageProps> = (props) => {
  const router = useRouter();

  const filterParam = router.query.filter;

  let filteredPets;

  if (filterParam) {
    filteredPets = props.pets.filter(
      (pet: PetTypes) => pet.service === filterParam
    );
  } else {
    filteredPets = props.pets;
  }

  return (
    <>
      <Head>
        <title>Mw&apos;s Pet Hotel</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PetsSearch />
      <PetsList pets={filteredPets} />
    </>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async () => {
  const client = await MongoClient.connect(`${process.env.MONGODB_URI}`);

  const db = client.db();

  const petCollection = db.collection("Pet Boarding");

  const petBoarding = await petCollection.find().toArray();

  client.close();

  return {
    props: {
      pets: petBoarding.map((pet) => ({
        name: pet.name,
        image: pet.image,
        animalClass: pet.animalClass,
        animalBreed: pet.animalBreed,
        service: pet.service,
        id: pet._id.toString(),
      })),
    },
  };
};
